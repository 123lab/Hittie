{		var composition = app.project.activeItem;	var layers = composition.selectedLayers;	var properties = composition.selectedProperties;	var numFrames = Math.floor(composition.duration / composition.frameDuration);		var outputString = ''	output('<?xml version="1.0" encoding="utf-8"?>');	output('<data>');		buildFile();	writeFile();		function buildFile() {		if (properties.length == 0) {			alert("No properties selected.");		}		else {			exportProperties();		}	}		function output(value) {		outputString += value + "\r";	}		function writeFile() {		output('</data>');		var file = new File(Folder.desktop.absoluteURI + "/" + "export.txt");		file.open("w","TEXT","????");		file.write(outputString);		file.close();		file.execute();	}		function exportProperties() {		var i = 0;		var l = properties.length;		// build properties list		var x = 0;		var y = properties.length;		var source = [];		var sourceCount = 0;		var currentContainer;		for (; x<y; ++x) {			if (properties[x].valueAtTime != undefined) {				// find parent				var parentName;				if (properties[x].parentProperty != undefined) {					parentName = properties[x].parentProperty.name;				}				else {					parentName = "Undefined Parent Source";				}				// build property				output('	<source name="' + parentName + '">');				exportProperty(properties[x])				output('	</source>');			}		}	}		function exportProperty(prop) {		var val = prop.valueAtTime(0 * composition.frameDuration, true);		if (val.length > 1) {			exportMultiValue(prop);		}		else {			exportSingleValue(prop);		}	}		function exportSingleValue(prop) {		var i = 0;		var l = numFrames;		var str = '		<property name="' + prop.name + '">\n';		for (; i<l; ++i) {			var time = i * composition.frameDuration;			var val = prop.valueAtTime(time, true);			str += '			<keyframe time="' + time + '" frame="' + i + '" value="' + val + '"/>\n';		}		str += "		</property>";		output(str);	}		function exportMultiValue(prop) {		var i = 0;		var l = numFrames;		var str = '		<property name="' + prop.name + '">\n';		for (; i<l; ++i) {			var time = i * composition.frameDuration;			var val = prop.valueAtTime(time, true);			if (val.length > 0) {				str += '			<keyframe time="' + time + '" frame="' + i + '"';				var x = 0;				var y = val.length;				for (; x<y; ++x) {					str += ' value' + x + '="' + val[x] + '"';				}				str += '/>\n';			}		}		str += "		</property>";		output(str);	}		function outputObject(obj) {		var out = "";		for (var s in obj) {			out += s + "\n";		}		alert(out);	}}